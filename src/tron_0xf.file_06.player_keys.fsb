\ tron.file_06.player_keys.fsb

\ This file is part of
\ Tron 0xF
\ A ZX Spectrum game written in Abersoft Forth

\ Copyright (C) 1985,2009,2015 Marcos Cruz (programandala.net)
\ Licencia/Permesilo/License: GPL 3

\ http://programandala.net/en.program.tron_0xf.html

.( Tron 0xF: player keys )

  \ Max lenght of a player key description in any language:
11 CONSTANT /KEY-DESC

  \ Screen coordinates:
10 CONSTANT KEYS-LINE     \ top line of the redefine menu
 0 CONSTANT KEY-DESC-COL  \ column of the key description
15 CONSTANT KEYS1-COL     \ column of player 1's keys
23 CONSTANT KEYS2-COL     \ column of player 2's keys
31 CONSTANT KEYS3-COL     \ column of player 3's keys

2 10 THRU

( Print key descriptions )

: +KEY-DESC-COL  ( ca len line -- ca len line col' )
  \ Relative column of a key description,
  \ depending on its lenght; it's relative to
  \ the absolute column of the key descriptions.
  OVER /KEY-DESC SWAP -  ;

: (TYPE-KEY-DESC)  ( ca len line col -- )
  \ Print a key description, on the given line,
  \ col columns from the left margin of its region.
  KEY-DESC-COL + AT TYPE  ;

: |KEY-DESC|  ( ca len line -- )
  \ Print a key description, on the given line,
  \ centered on its region.
  +KEY-DESC-COL 2 / (TYPE-KEY-DESC)  ;

: |KEY-DESC  ( ca len line -- )
  \ Print a key description, on the given line,
  \ at the left of its region.
  0 (TYPE-KEY-DESC)  ;

: KEY-DESC|  ( ca len line -- )
  \ Print a key description, on the given line,
  \ at the right of its region.
  OVER KEY-DESC-COL SWAP - (TYPE-KEY-DESC)  ;
  
( Keyboard: redefine keys )

HERE: KEY-DESCS
  \  This table contains the cfa of the four texts used
  \  to describe the player keys. When executed, they
  \  return a string in the current language.
  ' UP$ CFA , ' DOWN$ CFA , ' LEFT$ CFA , ' RIGHT$ CFA ,

: KEY-DESC  ( n -- ca len )
  \ Get the n element from the `KEY-DESCS` table.
  CELLS KEY-DESCS + @ EXECUTE  ;
  
: KEY.  ( line col a -- )
  \ Print a key name.
  \ a = key address in the keys table
  \ line col = screen coordinates
  KEY-NAME 2SWAP AT  TYPE  ;

: PLAYER-KEY.  ( line col a n -- )
  \ Print a player key name.
  \ line col = screen coordinates
  \ a = player keys table
  \ n = key number in the table 
  CELLS + @ KEY.  ;

( Keyboard: redefine keys )

: REDEFINED?  ( -- f )
  \ Ask for confirmation: Are the redefined keys ok?
  \ XXX TODO
  TRUE  ;

0 VARIABLE (COL)  0 VARIABLE (KEYS)  \ locals

: KEY-PROMPT  ( line col -- )
  \ Show a prompt, asking for a key to be pressed.
  2DUP AT 2 SPACES
  AT 1 INVERSE [CHAR] ? EMIT 0 INVERSE  ;

: KEY#>COORDS  ( n -- line col )
  \ Convert a player key number (0...3)
  \ to its cursor coordinates.
  KEYS-LINE + (COL) @ ;

: (REDEFINE)  ( col a -- )
  \ Redefine the keys of a player.
  \ col = column (`KEYS1-COL` or `KEYS2-COL`)
  \ a = player keys table (`KEYS1` or `KEYS2`)
  (KEYS) !  (COL) !  \ locals
  KEYS/PLAYER 0 DO
    I KEY#>COORDS KEY-PROMPT
    1000 MS PRESSED DUP (KEYS) @ I CELLS + !
    I KEY#>COORDS ROT KEY.
  LOOP  ;

( Keyboard: redefine menu )

: REDEFINE-MENU  ( -- )
  \ Show the menu to redefine the keys.
  CLS
  KEYS/PLAYER 0 DO
    I KEYS-LINE +
    DUP I KEY-DESC ROT |KEY-DESC
    DUP KEYS1-COL KEYS1 I PLAYER-KEY.
    DUP KEYS2-COL KEYS2 I PLAYER-KEY.
        KEYS3-COL KEYS3 I PLAYER-KEY.
  LOOP  ;

( Keyboard: redefine keys )

: REDEFINE1  ( -- )  KEYS1-COL KEYS1 (REDEFINE)  ;
: REDEFINE2  ( -- )  KEYS2-COL KEYS2 (REDEFINE)  ;
: REDEFINE3  ( -- )  KEYS3-COL KEYS3 (REDEFINE)  ;

: CONFIGURATION  ( -- )
  \ Redefine the keys.
  \ XXX TODO -- human/machine options
  REDEFINE-MENU
  BEGIN  REDEFINE1 REDEFINE2 REDEFINE3 REDEFINED?  UNTIL  ;

  \ vim: filetype=abersoftforth:fileencoding=utf-8

