.( Tron 0xF: load graphic files )

\ tron_0xf.file_13.load_graphics.fsb

\ This file is part of
\ Tron 0xF
\ A ZX Spectrum game written in fig-Forth with Abersoft Forth

\ http://programandala.net/en.program.tron_0xf.html

\ Copyright (C) 2015 Marcos Cruz (programandala.net)
\ License: GPL 3

  \ Tron 0xF is free software; you can redistribute it
  \ and/or modify it under the terms of the GNU General Public
  \ License as published by the Free Software Foundation;
  \ either version 3 of the License, or (at your option) any
  \ later version.
  \
  \ Tron 0xF is distributed in the hope that it will be
  \ useful, but WITHOUT ANY WARRANTY; without even the implied
  \ warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  \ PURPOSE.  See the GNU General Public License for more
  \ details.
  \
  \ You should have received a copy of the GNU General Public
  \ License along with Tron 0xF; if not, see
  \ <http://gnu.org/licenses>.

  \ -----------------------------------------------------------

  \ The author would be grateful for any constructive
  \ suggestions and bug-reports, via
  \ <http://programandala.net>.

  \ -----------------------------------------------------------

  \ This is the last Forth RAM disk loaded from tape during the
  \ compilation of the game. Its space is used to store some
  \ binary data (directly loaded from tape or used during the
  \ game), with the following map:

  \ screen 1:           copy of arena attributes (640 bytes)
  \                     384 bytes free
  \
  \ screens 2-8:        copy of a whole screen (6912 bytes)
  \                     game font (first part, 256 bytes)
  \
  \ screen 9:           game font (second part, 512 bytes)
  \                     digits UDG (160 bytes)
  \                     Esperanto characters (96 bytes)
  \                     Spanish characters (166 bytes)
  \                     Default UDG (64 bytes)
  \                     48 bytes free
  \
  \ screens 10 and 11:  graphic title (2048 bytes)

  \ -----------------------------------------------------------

-->

( Fonts, UDG, title )

+scroll
font /font 0 0 <tape              \ main font
+scroll
eo-udg /eo-udg 0 0 <tape          \ Esperanto characters
+scroll
es-udg /es-udg 0 0 <tape          \ Spanish characters
+scroll
digits-udg /digits-udg 0 0 <tape  \ score digits
+scroll
udg 0 0 0 <tape                   \ frame graphs
+scroll
title-address 0 0 0 <tape         \ graphic title
+scroll

  \ After the binary files have been loaded into the RAM disk,
  \ the loader must stop immediately, else it would erase the
  \ contents of the RAM disk before loading the next RAM disk
  \ from tape (see the Afera module <loader.fsb>). That's why
  \ the Afera module <loaded_execute.fsb> is not used to stop
  \ the loader at the end of the compilation.

  \ First method: make the loader stop and execute `run`:
  \ ' run cfa loaded !

  \ Second method: Clear the return stack and execute `run`:
rp! run

  \ vim: filetype=abersoftforthafera
