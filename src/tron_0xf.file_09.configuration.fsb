\ tron_0xf.file_09.configuration.fsb

\ This file is part of
\ Tron 0xF
\ A ZX Spectrum game written in Abersoft Forth

\ Copyright (C) 1985,2009,2015 Marcos Cruz (programandala.net)
\ Licencia/Permesilo/License: GPL 3

\ http://programandala.net/en.program.tron_0xf.html

.( Tron 0xF: configuration )

  \ Max lenght of a player key description in any language:
11 CONSTANT /KEY-DESC

  \ Screen coordinates:
10 CONSTANT KEYS-LINE     \ top line of the redefine menu
 0 CONSTANT KEY-DESC-COL  \ column of the key description

2 10 THRU

( Key descriptions )

: +KEY-DESC-COL  ( ca len line -- ca len line col' )
  \ Relative column of a key description,
  \ depending on its lenght; it's relative to
  \ the absolute column of the key descriptions.
  OVER /KEY-DESC SWAP -  ;

: (TYPE-KEY-DESC)  ( ca len line col -- )
  \ Print a key description, on the given line,
  \ col columns from the left margin of its region.
  KEY-DESC-COL + AT TYPE  ;

: |KEY-DESC|  ( ca len line -- )
  \ XXX OLD -- not used
  \ Print a key description, on the given line,
  \ centered on its region.
  +KEY-DESC-COL 2 / (TYPE-KEY-DESC)  ;

: |KEY-DESC  ( ca len line -- )
  \ Print a key description, on the given line,
  \ at the left of its region.
  0 (TYPE-KEY-DESC)  ;

: KEY-DESC|  ( ca len line -- )
  \ XXX OLD -- not used
  \ Print a key description, on the given line,
  \ at the right of its region.
  OVER KEY-DESC-COL SWAP - (TYPE-KEY-DESC)  ;
  
( Key descriptions )

HERE: KEY-DESCS
  \  This table contains the cfa of the four texts used
  \  to describe the player keys. When executed, they
  \  return a string in the current language.
  ' UP$ CFA , ' DOWN$ CFA , ' LEFT$ CFA , ' RIGHT$ CFA ,

: KEY-DESC  ( n -- ca len )
  \ Get the n element from the `KEY-DESCS` table.
  CELLS KEY-DESCS + @ EXECUTE  ;
  
: KEY.  ( line col a -- )
  \ Print a key name.
  \ a = key address in the keys table
  \ line col = screen coordinates
  KEY-NAME 2SWAP AT  TYPE  ;

: PLAYER-KEY.  ( line col a n -- )
  \ Print a player key name.
  \ line col = screen coordinates
  \ a = player keys table
  \ n = key number in the table 
  CELLS + @ KEY.  ;

( Redefine keys )

HERE: KEYS-COL-TABLE
  \ Table of keys columns for every player.
  14 C, 22 C, 30 C,

: KEYS-COL  ( n -- column )
  \ Keys column of the current player.
  PLAYER KEYS-COL-TABLE + C@  ;

: KEY#>COORDS  ( n -- line col )
  \ Convert a key number (0..3) of the current player
  \ to the cursor coordinates.
  KEYS-LINE + KEYS-COL @ ;

 \ XXX OLD
 \ : KEY-PROMPT  ( line col -- )
 \   \ Show a prompt, asking for a key to be pressed.
 \   2DUP AT 2 SPACES
 \   AT 1 INVERSE [CHAR] ? EMIT 0 INVERSE  ;
  : KEY-PROMPT  ( a n -- )
    \ a = player keys table
    \ n = key number in the table 
    DUP KEY#>COORDS 2SWAP 1 INVERSE PLAYER-KEY. 0 INVERSE  ;

: (REDEFINE)  ( -- )
  \ Redefine the keys of the current player.
  KEYS/PLAYER 0 DO
    PLAYER-KEYS @ I KEY-PROMPT
    1000 MS PRESSED DUP PLAYER-KEYS @ I CELLS + !
    I KEY#>COORDS ROT KEY.
  LOOP  ;

( Redefine keys menu )

: REDEFINE-MENU  ( -- )
  \ Show the redefine keys menu.
  CLS
  KEYS/PLAYER 0 DO
    I KEY-DESC I KEYS-LINE + |KEY-DESC
    PLAYERS 0 DO
      I PLAYER!
      J KEYS-LINE + KEYS-COL KEYS J PLAYER-KEY.
    LOOP
  LOOP  ;

( Redefine keys )

: REDEFINE  ( -- )
  \ Redefine the keys of all players.
  PLAYERS 0 DO  I PLAYER! (REDEFINE)  LOOP  ;

: REDEFINED?  ( -- f )
  \ Ask for confirmation: Are the redefined keys ok?
  \ XXX TODO
  TRUE  ;

: CONFIGURATION  ( -- )
  \ Redefine the keys.
  \ XXX TODO -- human/machine options
  REDEFINE-MENU
  BEGIN  REDEFINE REDEFINED?  UNTIL  ;

  \ vim: filetype=abersoftforth:fileencoding=utf-8

