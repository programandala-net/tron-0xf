.( Tron 0xF: menu )

\ tron_0xf.file_12.menu.fsb

\ This file is part of
\ Tron 0xF
\ A ZX Spectrum game written in fig-Forth with Abersoft Forth

\ http://programandala.net/en.program.tron_0xf.html

\ Copyright (C) 2015,2016,2020 Marcos Cruz (programandala.net)
\ License: GPL 3

  \ Tron 0xF is free software; you can redistribute it
  \ and/or modify it under the terms of the GNU General Public
  \ License as published by the Free Software Foundation;
  \ either version 3 of the License, or (at your option) any
  \ later version.
  \
  \ Tron 0xF is distributed in the hope that it will be
  \ useful, but WITHOUT ANY WARRANTY; without even the implied
  \ warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  \ PURPOSE.  See the GNU General Public License for more
  \ details.
  \
  \ You should have received a copy of the GNU General Public
  \ License along with Tron 0xF; if not, see
  \ <http://gnu.org/licenses>.

  \ -----------------------------------------------------------

  \ The author would be grateful for any constructive
  \ suggestions and bug-reports, via
  \ <http://programandala.net>.

  \ -----------------------------------------------------------

2 8 thru

( Menu -- data )

6 constant options      \ number of menu options
2 constant lines/option \ lines occupied per menu option

contents-line 2+ constant menu-line

options buffer: menu-keys
  \ A table to store the menu keys. They change depending on
  \ the current language. This table is updated every time the
  \ menu is printed, using the initials of the menu options.

here: menu-options
  ' option-0$ cfa ,  ' option-1$ cfa ,
  ' option-4$ cfa ,  ' option-5$ cfa ,
  ' option-6$ cfa ,  ' option-7$ cfa ,
  \ A table that holds the cfa of the words that return the
  \ localized texts of the menu options.

( Menu -- language and commands)

: change-language ( -- )
  lang 1+ dup langs < *  to lang lang-udg wipe-contents ;
  \ Change the current language.

: about ( -- )
  whole-page copyright cr cr authors more license more page ;

: instructions ( -- ) whole-page (instructions) more page ;

: finish ( -- ) cls0 -font greeting cr quit-message quit ;

( Menu commands and options)

here: menu-commands
  ] change-language instructions configure game about finish [
  \ Execution table of the menu commands.
  \
  \ Every command must leave the screen ready to print the
  \ menu: commands that use the whole screen must call `page`;
  \ commands that use only the contents zone must call
  \ `wipe-contents` (or `more`, that calls it); commands that
  \ change only their own menu option must set ink to white.

: initial! ( n c -- ) swap menu-keys + c! ;
  \ Store char 'c' into the 'n' position of the
  \ `menu-keys` table.

: option-initial ( ca n -- )
  swap c@ upperc dup initial. initial! ;
  \ Print the initial of the menu option number n,
  \ stored in the given address, and also store it
  \ into the `menu-keys` table.

: option>line (  n -- line ) lines/option * menu-line + ;
  \ Convert a menu option number to its line.

: option>string ( n -- ca len ) menu-options swap >execute ;
  \ Convert a menu option number to its localized text.

( Option)

: option ( n -- )
  dup >r                 ( n ) ( R: n )
  dup option>line        ( n line )
  >r option>string       ( ca len ) ( R: n line )
  dup centered           ( ca len col )
  r> swap                ( ca len line col ) ( R: n )
  2dup at 2over drop r>  ( ca len line col ca n ) ( R: )
  option-initial         ( ca len line col )
  1+ at 1 /string type ;
  \ Print menu option number _n_.
  \
  \ XXX TODO -- make it simpler and faster: calculate
  \ the coordinates when the strings are created, and
  \ store them in a table.

( Menu)

: menu ( -- )
  options 0 do  i option  loop  reveal-contents 256 ms ;
  \ Print the menu.

( Valid option)

: valid-option? ( c -- cfa tf | ff )
  upperc
  false swap \ default exit flag
  options 0 do
    dup menu-keys i + c@ = \ valid key?
    if 2drop menu-commands i cells + @ true dup leave then
  loop drop ;
  \ Is the given character a valid menu option in the current
  \ language? If so, return the cfa of its associated command
  \ and a true flag; otherwise return a false flag.

: valid-option ( -- cfa )
  begin akey valid-option? until key-sound ;
  \ Wait until a valid menu option is chosen and then
  \ return the cfa of its associated command.

( Boot)

128 allot-csb
  \ Init the circular string-buffer.
  \ XXX TODO use the RAM-disk

: init ( -- ) +screen +font cls0 page ;

forth definitions

: bye ( -- ) mon ;

: run ( -- ) tron [compile] tron
             init begin menu valid-option execute again ;
  \ Endless loop: Show the menu and execute the chosen option.
  \ Note: `tron` must be executed because fig-Forth
  \ sets `context` to `current` before compiling a definition.
  \ Beside, `tron` must be compiled in order to let the user
  \ execute the game after being exited to BASIC.

extend \ protect the code from `cold`

  \ vim: filetype=abersoftforthafera
