.( Tron 0xF: localization )

\ tron_0xf.file_07.localization.fsb

\ This file is part of
\ Tron 0xF
\ A ZX Spectrum game written in fig-Forth with Abersoft Forth

\ http://programandala.net/en.program.tron_0xf.html

\ Copyright (C) 2015,2016,2020 Marcos Cruz (programandala.net)
\ License: GPL 3

  \ Tron 0xF is free software; you can redistribute it
  \ and/or modify it under the terms of the GNU General Public
  \ License as published by the Free Software Foundation;
  \ either version 3 of the License, or (at your option) any
  \ later version.
  \
  \ Tron 0xF is distributed in the hope that it will be
  \ useful, but WITHOUT ANY WARRANTY; without even the implied
  \ warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  \ PURPOSE.  See the GNU General Public License for more
  \ details.
  \
  \ You should have received a copy of the GNU General Public
  \ License along with Tron 0xF; if not, see
  \ <http://gnu.org/licenses>.

  \ -----------------------------------------------------------

  \ The author would be grateful for any constructive
  \ suggestions and bug-reports, via
  \ <http://programandala.net>.

  \ -----------------------------------------------------------

2 10 thru

( localized )

: localized  ( pfa0 pfa1 pfa2 pfa3 "name" -- )

  \ Create a word that will execute another word from a list of
  \ four, depending on the current language.

  \ Parameters are the parameter field addresses of the
  \ localized versions, in reverse order of ISO language code:
  \ pfa0 = pfa of the Interlingue word (IE)
  \ pfa1 = pfa of the Spanish word (ES)
  \ pfa2 = pfa of the Esperanto word (EO)
  \ pfa3 = pfa of the English word (EN)

  \ First, create a new word in the current dictionary with the
  \ given name, and store the three cfa (cofe field
  \ addresses) of the given words into its own pfa:

  <builds cfa , cfa , cfa , cfa ,

  \ Second, define what the new word will do when executed:
  \ fetch from its pfa one of the three stored cfa depending on
  \ the current language, and execute it:

  does>  ( -- )  ( pfa )  lang >execute  ;

( Localized menu options)

  \ XXX TODO Calculate the column to center every option and
  \ store it into a table. Now it's calculated at run-time,
  \ what is slow.

  \ XXX TODO update
' ie-option-0$ ' es-option-0$ ' eo-option-0$ ' en-option-0$
  localized option-0$  ( -- ca len )
' ie-option-1$ ' es-option-1$ ' eo-option-1$ ' en-option-1$
  localized option-1$  ( -- ca len )
' ie-option-3$ ' es-option-3$ ' eo-option-3$ ' en-option-3$
  localized option-3$  ( -- ca len )
' ie-option-4$ ' es-option-4$ ' eo-option-4$ ' en-option-4$
  localized option-4$  ( -- ca len )

( Localized menu options)

' ie-option-5$ ' es-option-5$ ' eo-option-5$ ' en-option-5$
  localized option-5$  ( -- ca len )
' ie-option-6$ ' es-option-6$ ' eo-option-6$ ' en-option-6$
  localized option-6$  ( -- ca len )
' ie-option-7$ ' es-option-7$ ' eo-option-7$ ' en-option-7$
  localized option-7$  ( -- ca len )

( Localized texts)

' ie-instructions ' es-instructions ' eo-instructions
' en-instructions localized (instructions)  ( -- )

' ie-up$ ' es-up$ ' eo-up$ ' en-up$
  localized up$  ( -- ca len )
' ie-down$ ' es-down$ ' eo-down$ ' en-down$
  localized down$  ( -- ca len )
' ie-left$ ' es-left$ ' eo-left$ ' en-left$
  localized left$  ( -- ca len )
' ie-right$ ' es-right$ ' eo-right$ ' en-right$
  localized right$  ( -- ca len )

' ie-press-any-key$ ' es-press-any-key$ ' eo-press-any-key$
' en-press-any-key$ localized press-any-key$  ( -- ca len )

' ie-do-stop$ ' es-do-stop$ ' eo-do-stop$ ' en-do-stop$
localized do-stop$  ( -- ca len )

( Localized texts)


  \ XXX OLD
  \ ' ES-ANOTHER?$ ' EO-ANOTHER?$ ' EN-ANOTHER?$
  \ localized ANOTHER?$  ( -- ca len )
  \ ' es-license$ ' eo-license$ ' en-license$
  \ localized license$  ( -- ca len )

' ie-'y' ' es-'y' ' eo-'y' ' en-'y' localized 'y'  ( -- c )

' ie-quit-message ' es-quit-message ' eo-quit-message
' en-quit-message localized quit-message  ( -- )

' ie-on$ ' es-on$ ' eo-on$ ' en-on$ localized on$ ( -- ca len )

' ie-off$ ' es-off$ ' eo-off$ ' en-off$
localized off$  ( -- ca len )

( Localized texts)

  \ XXX OLD
  \ ' es-player$ ' eo-player$ ' en-player$
  \ localized player$  ( -- ca len )

' ie-human$ ' es-human$ ' eo-human$ ' en-human$
localized human$  ( -- ca len )

' ie-robot$ ' es-robot$ ' eo-robot$ ' en-robot$
localized robot$  ( -- ca len )

' ie-pilot$ ' es-pilot$ ' eo-pilot$ ' en-pilot$
localized pilot$  ( -- ca len )

' ie-none$ ' es-none$ ' eo-none$ ' en-none$
localized none$  ( -- ca len )

' ie-pilot-help$ ' es-pilot-help$ ' eo-pilot-help$
' en-pilot-help$ localized pilot-help$   ( -- ca len )

' ie-color-help$ ' es-color-help$ ' eo-color-help$
' en-color-help$ localized color-help$   ( -- ca len )

( Localized texts)

' ie-version$ ' es-version$ ' eo-version$ ' en-version$
localized version$  ( -- ca len )

' ie-vehicle$ ' es-vehicle$ ' eo-vehicle$ ' en-vehicle$
localized vehicle$  ( -- ca len )

' ie-color$ ' es-color$ ' eo-color$ ' en-color$
localized color$  ( -- ca len )

' ie-menu-help$ ' es-menu-help$ ' eo-menu-help$ ' en-menu-help$
localized menu-help$  ( -- ca len )

( Conditional texts)

: human|robot|none$  ( -- ca len )
  player-pilot @ case
    human of  human$  endof
    robot of  robot$  endof
    none$ rot  \ default
  endcase  ;

: on/off$  ( f -- ca len )  if  on$  else  off$  then  ;

( Texts that don't need translation)

' ie-license ' es-license ' eo-license ' en-license
localized license  ( -- )

' ie-authors ' es-authors ' eo-authors ' en-authors
localized authors  ( -- )

  \ Print the version number.
: .version  ( -- )
  version-major 0 .r [char] . emit
  version-minor 0 .r [char] . emit
  version-patch 0 .r [char] + emit
  version-release <# #s #> type  ;

: copyright  ( -- )
  ." Tron 0xF" cr version$ type space .version cr
      \ <------------------------------>
  cr ." (C) 2015,2106,2020 Marcos Cruz" cr
     ." (programandala.net)"  ;

  \ The letter used to say "no", in the three languages.
char N constant 'n'

  \ vim: filetype=abersoftforthafera
