.( Tron 0xF: game -- part 1 )

\ tron_0xf.file_10.game.fsb

\ This file is part of
\ Tron 0xF
\ A ZX Spectrum game written in fig-Forth with Abersoft Forth

\ http://programandala.net/en.program.tron_0xf.html

\ Copyright (C) 1985,2009,2015 Marcos Cruz (programandala.net)
\ License: GPL 3

  \ Tron 0xF is free software; you can redistribute it
  \ and/or modify it under the terms of the GNU General Public
  \ License as published by the Free Software Foundation;
  \ either version 3 of the License, or (at your option) any
  \ later version.
  \
  \ Tron 0xF is distributed in the hope that it will be
  \ useful, but WITHOUT ANY WARRANTY; without even the implied
  \ warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  \ PURPOSE.  See the GNU General Public License for more
  \ details.
  \
  \ You should have received a copy of the GNU General Public
  \ License along with Tron 0xF; if not, see
  \ <http://gnu.org/licenses>.

2 5 thru
  
( Paint )

  \ XXX TODO Make the graphics faster
  \
  \ This patch modifies `plot` to call ROM 22E5
  \ instead ROM 22DF, but it's not enough:
  \ 22E5 7F7F !

: paint  ( -- )
  player-color @ ink player-xc @ player-yc @ plot  ;

( Crash effect )

  \ XXX OLD -- not used
  \ : coords>cursor  ( x y -- line col )
  \   \ Convert graphic coordinates to line and column.
  \   175 swap - 8 / swap 8 /  ;

: crash-noise  ( -- )
  \ XXX TODO
  100 50 do  11 i ?bleep  loop  ;

: crash  ( -- )
  \ XXX TODO
  crash-noise  ;

( Noise )

  \ XXX OLD
\ here: MOTOR-NOISES
\  \ Table of `bleep` parameters for every player.
\  0 1 , ,  100 1 , ,  200 1 , ,

: motor-noise  ( -- )
  \ do the motor noise of the current player.
  \ player [ 2 cells ] literal * MOTOR-NOISES + 2@
  1 0 ?bleep  ;

( Collisions )

999 constant max-score

: score!   ( n a -- )
  \ Update the score stored in 'a' with 'n';
  \ if the result is greater than the maximum score,
  \ reset the score to zero.
  dup @ rot + dup max-score > if  0=  then  swap !  ;

: score+  ( n -- )
  player-score score! .score  ;

: crash?  ( -- f )
  \ Is the next position occupied?
  player-xinc @ player-xc @ +
  \ dup 0 0 at .  \  XXX INFORMER
  player-yinc @ player-yc @ +
  \ dup 0 15 at .  \  XXX INFORMER
  point
  \ dup if  1 0 at quit  then  \  XXX INFORMER
  ;

: +scores  ( -- )
  \ Increase the score of the players that didn't crash.
  players 0 do  i player! crash? 0= score+  loop  ;

  \ vim: filetype=abersoftforthafera
