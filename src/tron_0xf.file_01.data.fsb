\ tron_0xf.file_01.data.fsb

\ This file is part of
\ Tron 0xF
\ A ZX Spectrum game written in fig-Forth with Abersoft Forth

\ http://programandala.net/en.program.tron_0xf.html

\ Copyright (C) 1985,2009,2015 Marcos Cruz (programandala.net)
\ License: GPL 3

  \ Tron 0xF is free software; you can redistribute it
  \ and/or modify it under the terms of the GNU General Public
  \ License as published by the Free Software Foundation;
  \ either version 3 of the License, or (at your option) any
  \ later version.
  \
  \ Tron 0xF is distributed in the hope that it will be
  \ useful, but WITHOUT ANY WARRANTY; without even the implied
  \ warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  \ PURPOSE.  See the GNU General Public License for more
  \ details.
  \
  \ You should have received a copy of the GNU General Public
  \ License along with Tron 0xF; if not, see
  \ <http://gnu.org/licenses>.

-->

.( Tron 0xF: data )

FORTH DEFINITIONS

  \ Memory addresses and sizes

22528 CONSTANT ATTRIBUTES  768 CONSTANT /ATTRIBUTES

  \ System variables

23606 CONSTANT SYS-CHARS    23675 CONSTANT SYS-UDG
23677 CONSTANT SYS-X-COORD  23678 CONSTANT SYS-Y-COORD

  \ Color constants

0 CONSTANT BLACK    1 CONSTANT BLUE
2 CONSTANT RED      3 CONSTANT MAGENTA
4 CONSTANT GREEN    5 CONSTANT CYAN
6 CONSTANT YELLOW   7 CONSTANT WHITE

: PAPERY  ( color -- paper-attribute )  8 *  ;

3 11 THRU

( Vocabulary)

: TASK  ;  VOCABULARY TRON IMMEDIATE  TRON DEFINITIONS

  \ Languages

 3 CONSTANT LANGS  \ number of languages
 0 CONSTANT EN     \ English
 1 CONSTANT EO     \ Esperanto
 2 CONSTANT ES     \ Spanish
 \ XXX TODO convert `LANG` to a value:
EN VARIABLE LANG   \ current language

3 CONSTANT MAX-PLAYERS  \ maximum number of players
3 VALUE PLAYERS         \ number of players

4 CONSTANT KEYS/PLAYER  \ keys per player

  \ Type of players.

0 CONSTANT MISSING
1 CONSTANT HUMAN
2 CONSTANT ROBOT

( Players data)

12 CELLS CONSTANT /PLAYER-DATA \ bytes per player data

  \ Buffer that holds the data of all players.

/PLAYER-DATA MAX-PLAYERS * CONSTANT /PLAYERS-DATA
/PLAYERS-DATA BUFFER: PLAYERS-DATA
PLAYERS-DATA /PLAYERS-DATA ERASE

  \ Pointers to the data of every player.

PLAYERS-DATA CONSTANT PLAYER0-DATA
PLAYER0-DATA /PLAYER-DATA + CONSTANT PLAYER1-DATA
PLAYER1-DATA /PLAYER-DATA + CONSTANT PLAYER2-DATA

HERE: PLAYER#-DATA
  \ Table to access the players' data addresses.
  PLAYER0-DATA , PLAYER1-DATA , PLAYER2-DATA ,

( Specific player data fields )

: PLAYER#-VARIABLE  ( value field player "name" -- )

  \ Create a player variable.

  \ A player# variable is a constant that points to a data
  \ field of a specific player. This way it works like an
  \ ordinary variable, but the player data can be manipulated
  \ also as a whole (e.g. store and fetch the coordinates with
  \ double numbers, for speed; erase the whole zone, etc.).

  /PLAYER-DATA * PLAYERS-DATA +  \ player data address
  SWAP CELLS +                   \ field address
  DUP CONSTANT !  ;              \ do it

( Player 0 data fields)

  \ XXX TODO simplify:
  \ the PLAYERx and CONTROLx fields are redundant,
  \ the PLAYERx and PLAYER-TYPE are not used.

 ROBOT  0 0 PLAYER#-VARIABLE PLAYER0   \ human or robot
     0  1 0 PLAYER#-VARIABLE SCORE0    \ score
     0  2 0 PLAYER#-VARIABLE YC0       \ Y coordinate
     0  3 0 PLAYER#-VARIABLE XC0       \ X coordinate
     0  4 0 PLAYER#-VARIABLE YINC0     \ Y inc (-1..1)
     0  5 0 PLAYER#-VARIABLE XINC0     \ X inc (-1..1)
YELLOW  6 0 PLAYER#-VARIABLE COLOR0    \ ink color
     0  7 0 PLAYER#-VARIABLE UP-K0     \ up key
     0  8 0 PLAYER#-VARIABLE DOWN-K0   \ down key
     0  9 0 PLAYER#-VARIABLE LEFT-K0   \ left key
     0 10 0 PLAYER#-VARIABLE RIGHT-K0  \ right key
     0 11 0 PLAYER#-VARIABLE CONTROL0  \ manual or automatic

  \ Note: `CONTROL0` is initialized later with a cfa.

  \ Double data fields:
YC0   CONSTANT COORDS0
YINC0 CONSTANT INCS0
  \ Player keys table:
UP-K0 CONSTANT KEYS0

( Player 1 data fields)

 ROBOT  0 1 PLAYER#-VARIABLE PLAYER1   \ type
     0  1 1 PLAYER#-VARIABLE SCORE1    \ score
     0  2 1 PLAYER#-VARIABLE YC1       \ Y coordinate
     0  3 1 PLAYER#-VARIABLE XC1       \ X coordinate
     0  4 1 PLAYER#-VARIABLE YINC1     \ Y inc (-1..1)
     0  5 1 PLAYER#-VARIABLE XINC1     \ X inc (-1..1)
  CYAN  6 1 PLAYER#-VARIABLE COLOR1    \ ink color
     0  7 1 PLAYER#-VARIABLE UP-K1     \ up key
     0  8 1 PLAYER#-VARIABLE DOWN-K1   \ down key
     0  9 1 PLAYER#-VARIABLE LEFT-K1   \ left key
     0 10 1 PLAYER#-VARIABLE RIGHT-K1  \ right key
     0 11 1 PLAYER#-VARIABLE CONTROL1  \ manual or automatic

  \ Note: `CONTROL1` is initialized later with a cfa.

  \ Double data fields:
YC1   CONSTANT COORDS1
YINC1 CONSTANT INCS1
  \ Player keys table:
UP-K1 CONSTANT KEYS1

( Player 2 data fields)

 HUMAN  0 2 PLAYER#-VARIABLE PLAYER2   \ type
     0  1 2 PLAYER#-VARIABLE SCORE2    \ score
     0  2 2 PLAYER#-VARIABLE YC2       \ Y coordinate
     0  3 2 PLAYER#-VARIABLE XC2       \ X coordinate
     0  4 2 PLAYER#-VARIABLE YINC2     \ Y inc (-1..1)
     0  5 2 PLAYER#-VARIABLE XINC2     \ X inc (-1..1)
 GREEN  6 2 PLAYER#-VARIABLE COLOR2    \ ink color
     0  7 2 PLAYER#-VARIABLE UP-K2     \ up key
     0  8 2 PLAYER#-VARIABLE DOWN-K2   \ down key
     0  9 2 PLAYER#-VARIABLE LEFT-K2   \ left key
     0 10 2 PLAYER#-VARIABLE RIGHT-K2  \ right key
     0 11 2 PLAYER#-VARIABLE CONTROL2  \ manual or automatic

  \ Note: `CONTROL2` is initialized later with a cfa.

  \ Double data fields:
YC2   CONSTANT COORDS2
YINC2 CONSTANT INCS2
  \ Player keys table:
UP-K2 CONSTANT KEYS2

( Current player's data fields )

  \ Number of the current player (0..2). 
0 VALUE PLAYER

  \ Address of the current player's data.
PLAYER0-DATA VALUE PLAYER-DATA

: PLAYER!  ( n -- )
  \ Set the current player to 'n'.
  \ n = 0..2
  DUP TO PLAYER  CELLS PLAYER#-DATA + @ TO PLAYER-DATA  ;

: PLAYER-VARIABLE  ( field "name" -- )

  \ Create a player variable.

  \ A player variable returns the address of a player data
  \ field, depending on the content of `PLAYER-DATA`.  This way
  \ one single word can be used to manage any player.

  <BUILDS   ( n "name" )  CELLS C,
  DOES>     ( -- a ) ( pfa )
    C@ PLAYER-DATA +  ;

( Current player data fields )

 0 PLAYER-VARIABLE PLAYER-TYPE     \ human, robot
 1 PLAYER-VARIABLE PLAYER-SCORE    \ score
 2 PLAYER-VARIABLE PLAYER-COORDS   \ both coordinates
 2 PLAYER-VARIABLE PLAYER-YC       \ Y coordinate
 3 PLAYER-VARIABLE PLAYER-XC       \ X coordinate
 4 PLAYER-VARIABLE PLAYER-INCS     \ both incs
 4 PLAYER-VARIABLE PLAYER-YINC     \ Y inc (-1..1)
 5 PLAYER-VARIABLE PLAYER-XINC     \ X inc (-1..1)
 6 PLAYER-VARIABLE PLAYER-COLOR    \ ink color
 7 PLAYER-VARIABLE PLAYER-KEYS     \ keys table
 7 PLAYER-VARIABLE PLAYER-UP-K     \ up key
 8 PLAYER-VARIABLE PLAYER-DOWN-K   \ down key
 9 PLAYER-VARIABLE PLAYER-LEFT-K   \ left key
10 PLAYER-VARIABLE PLAYER-RIGHT-K  \ right key
11 PLAYER-VARIABLE PLAYER-CONTROL  \ manual, autopilot

  \ vim: filetype=abersoftforth
