\ Tron
\ A game written in ZX Spectrum's Abersoft Forth.

\ tron.file_2.fsb
\ This file is the 3rd part of the source.

\ Copyright (C) 1985,2009,2015 Marcos Cruz (programandala.net)
\ Licencia/Permesilo/License: GPL 3

\ http://programandala.net/es.programa.tron.html

  \ -----------------------------------------------------------
  \ fsb directives

  \ The following '#vim' directives, processed by fsb,
  \ translate the UTF-8 chars in this source file to the ZX
  \ Spectrum UDG defined in <tron.file_1.fsb>):

  \ XXX FIXME this still causes trouble with fsb.

  \ #vim %substitute@á@\=nr2char(144)@g
  \ #vim %substitute@Ĉ@\=nr2char(146)@g
  \ #vim %substitute@é@\=nr2char(148)@g
  \ #vim %substitute@ĝ@\=nr2char(150)@g
  \ #vim %substitute@í@\=nr2char(152)@g
  \ #vim %substitute@ó@\=nr2char(158)@g
  \ #vim %substitute@ú@\=nr2char(162)@g
  \ #vim %substitute@¿@\=nr2char(153)@g
  \ #vim %substitute@ŭ@\=nr2char(154)@g

( Load )

2 10 THRU
RUNT \ Load the next part of the source

( English texts)

: EN-INSTRUCTIONS  ( -- )
  \  <------------------------------->
  \  XXX TODO -- complete:
  ." Every player drives a motorbike" CR
  ." whose only control makes it turn" CR
  ." ninety degrees without any speed" CR
  ." Every motorbike leaves a solid" CR
  ." light trail behind. The goal of"
  ." the game is to make your" CR
  ." adversary crash the labyrinth." CR ;
  \  <------------------------------->
: EN-KEYS  ( -- )
  \ XXX TODO -- keys will be configurable:
  \  <------------------------------->
  ." Keys:" CR
  ."  Player 1:  Q A C X" CR
  ."  Player 2:  P ENTER M N" CR  ;
  \  <------------------------------->

( English texts)

: EN-FINISH  ( -- )
  \  <------------------------------->
  ." To play again: RUN" CR
  ." To exit Forth: BYE" CR  ;
  \  <------------------------------->

: EN-ANOTHER?  ( -- ca len )  S" Play again? (Y/N)"  ;

: EN-PRESS-ANY-KEY  ( -- ca len ) S" Press any key"  ;

CHAR Y CONSTANT EN-'Y'

( Esperanto texts)

: EO-INSTRUCTIONS  ( -- )
  \  <------------------------------->
  ." Ĉiu ludanto veturas motorciklon" CR
  ." kies nura stirilo ĝin ĝiras" CR
  ." naŭdek gradojn sen malrapidiĝo." CR
  ." Ĉiu veturilo postlasas solidan" CR
  ." lumomuron. La ludocelo estas" CR
  ." frakasigi la kontraŭulon" CR
  ." en la labirinton." CR ;
  \  <------------------------------->
: EO-KEYS  ( -- )
  \  <------------------------------->
  ." Klavoj:" CR
  \ XXX TODO -- keys will be configurable:
  ."  Ludanto 1:  Q A C X" CR
  ."  Ludanto 2:  P ENTER M N" CR  ;
  \  <------------------------------->

( Esperanto texts)

: EO-FINISH  ( -- )
  \  <------------------------------->
  ." Por reludi: RUN" CR
  ." Por eliri el Fortho: BYE" CR  ;
  \  <------------------------------->

: EO-ANOTHER?  ( -- ca len )  S" Ĉu reludi? (J/N)"  ;

: EO-PRESS-ANY-KEY  ( -- ca len ) S" Premu klavon"  ;

CHAR J CONSTANT EO-'Y'

( Spanish texts)

: ES-INSTRUCTIONS  ( -- )
  \  <------------------------------->
  ." Cada jugador conduce una moto" CR
  ." cuyo único control la hace girar" CR
  ." noventa grados sin frenar. Cada" CR
  ." moto deja tras de sí una pared" CR
  ." sólida de luz. El objetivo del" CR
  ." juego es hacer estrellarse al" CR
  ." contrincante con el laberinto." CR ;
  \  <------------------------------->
: ES-KEYS  ( -- )
  \  <------------------------------->
  ." Teclas:" CR
  \ XXX TODO -- keys will be configurable:
  ."  Jugador 1:  Q A C X" CR
  ."  Jugador 2:  P ENTER M N" CR  ;
  \  <------------------------------->

( Spanish texts)

: ES-FINISH  ( -- )
  \  <------------------------------->
  ." Para jugar otra vez: RUN" CR
  ." Para salir de Forth: BYE" CR  ;
  \  <------------------------------->

: ES-ANOTHER?  ( -- ca len )  S" ¿Jugar otra vez? (S/N)"  ;

: ES-PRESS-ANY-KEY  ( -- ca len ) S" Pulsa una tecla"  ;

CHAR S CONSTANT ES-'Y'

( Localization)

: LOCALIZED  ( cfa1 cfa2 cfa3 "name" -- )

  \ Create a word that will execute another word from a list of
  \ three, depending on the current language.

  \ Parameters are the parameter field addresses of the
  \ localized versions, in reverse order of ISO language code:
  \ pfa1 = pfa of the Spanish word (ES)
  \ pfa2 = pfa of the Esperanto word (EO)
  \ pfa3 = pfa of the English word (EN)

  \ First, create a new word in the current dictionary with the
  \ given name, and store the three pfa (parameter field
  \ addresses) into its own pfa (parameter field address):

  <BUILDS , , ,

  \ Second, define what the new word will do when executed:
  \ fetch from its pfa one of the three stored pfa depending on
  \ the current language, and execute its word:

  DOES>  ( pfa )  LANG @ CELLS + @ CFA EXECUTE  ;

( Localizated texts)

' ES-INSTRUCTIONS ' EO-INSTRUCTIONS ' EN-INSTRUCTIONS
LOCALIZED (INSTRUCTIONS)  ( -- )
: INSTRUCTIONS  ( -- )  1 BRIGHT (INSTRUCTIONS) CR 0 BRIGHT  ;

' ES-KEYS ' EO-KEYS ' EN-KEYS
LOCALIZED (KEYS)  ( -- )
: KEYS  ( -- )  (KEYS) CR  ;

' ES-PRESS-ANY-KEY ' EO-PRESS-ANY-KEY ' EN-PRESS-ANY-KEY
LOCALIZED "PRESS-ANY-KEY"  ( -- ca len )

' ES-ANOTHER? ' EO-ANOTHER? ' EN-ANOTHER?
LOCALIZED "ANOTHER?"  ( -- ca len )

' ES-'Y' ' EO-'Y' ' EN-'Y'
LOCALIZED 'Y'  ( -- c )

' ES-FINISH ' EO-FINISH ' EN-FINISH
LOCALIZED (FINISH)  ( -- )
: FINISH  ( -- )  WIPE (FINISH)  ;

( Texts that don't need translation)

: CREDITS  ( -- )
  \  <------------------------------->
  ." Copyright (C) 1985,2009,2015" CR
  ."  Marcos Cruz (programandala.net)" CR
  ." Licencia/Permesilo/License:" CR
  ."  http://programandala.net/lp" CR CR  ;
  \  <------------------------------->

CHAR N CONSTANT 'N'

  \ vim: filetype=abersoftforth:fileencoding=utf-8
